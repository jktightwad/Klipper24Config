#####################################################################
#  Macros
#####################################################################
[gcode_macro PRINT_START]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(100)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(220)|float %}
    {% set z_adjust = params.Z_ADJUST|default(0.0)|float %}
    {% set retract = 5 %}
    M107
    STATUS_HEATING
    M140 S{BED_TEMP}                         ; set bed final temp
    M190 S{BED_TEMP}                         ; wait for bed final temp
    Attach_Probe_Lock
      {% if "z" not in printer.toolhead.homed_axes %}
          G32                         ;Only G28 Home if needed
          BED_MESH_CALIBRATE
      {% else %}
          {% if printer.bed_mesh.profile_name == '' %}
              G32
              BED_MESH_CALIBRATE
          {% else %}
              {% if not printer.quad_gantry_level.applied %}
                M117 QGL
                QUAD_GANTRY_LEVEL
                G28 X Y	Z		      ; Re-home
              {% endif %}
              G91
              G1 Z10 Y-10 X-10 F4000
              G90
          {% endif %}
      {% endif %}
    Dock_Probe_Unlock
    G1 X135 Y307 Z10 F9000
    M117 Heating..
    STATUS_HEATING
    M104 S{EXTRUDER_TEMP}
    M109 S{EXTRUDER_TEMP}             ; Set and wait for nozzle to reach temperature
    SET_GCODE_VARIABLE MACRO=clean_nozzle VARIABLE=enable_purge VALUE="True"
    SET_GCODE_VARIABLE MACRO=clean_nozzle VARIABLE=wipe_qty VALUE="4"
    SET_GCODE_VARIABLE MACRO=clean_nozzle VARIABLE=purge_ret VALUE="6"    
    clean_nozzle                      ; clean nozzle
    CALIBRATE_Z
    #BED_MESH_PROFILE LOAD=default   ; load mesh if needed
    # Adjust the G-Code Z offset with the Z_ADJUST parameter if needed
    # SET_GCODE_OFFSET Z_ADJUST={z_adjust} MOVE=1
    G0 F200 E25 ; Un-retract
    G92 E0                         ; zero the extruder
    STATUS_READY
    M117 Intro Line..
    _PURGE_LINE
    M117 Printing...
    status_printing

[gcode_macro G32]auto
gcode:
    BED_MESH_CLEAR
    {% if "z" not in printer.toolhead.homed_axes %}
        G28                             ;Only G28 Home if needed
    {% endif %}
    QUAD_GANTRY_LEVEL
    G28 Z
    G91
    G1 Z10 Y-10 X-10 F4000
    G90

[gcode_macro _PURGE_LINE]
gcode:
    {% if "z" not in printer.toolhead.homed_axes %}
        G28                             ;Only G28 Home if needed
    {% endif %}
    G0 X100 Y5 Z0.2 F9000         ; Move to start position
    G92 E0                        ; Reset Extruder
    G1 E10 F600                   ; Extrude a little
    G1 X250 E20 F1000              ; Draw line
    G92 E0                        ; Reset Extruder
    G91                           ; relative positioning
    G0 Z10 F1000                  ; Raise nozzle
    G90

[gcode_macro _PRINT_STARTOLD]
#   Use PRINT_START for the slicer starting script - please customize for your slicer of choice
;default_parameter_BED_TEMP: 60
;default_parameter_EXTRUDER_TEMP: 195
gcode:
    M117 ET Phone Home
    _G28                            ; home all axes
    M117 Honey, I'm Home warm up the bed
    M190 S{params.BED_TEMP}               ; Wait for bed to reach temperature
    M117 Let's get melty!
    M109 S{params.EXTRUDER_TEMP}          ; Start nozzle heating
    G32
    clean_nozzle
    M117 All clean, lets get even
    CALIBRATE_Z
    
    #G32
    M117 Evened up, lets get started!
    G1 Z5 F3000                    ; move nozzle away from bed
    G1 X2 Y 15 Z5 F3000            ; Move the nozzle near the bed
    PRIME_EXTRUDER                 ; Prime line

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    M220 S100                      ; reset print speed override to 100% 
    M221 S100               ; reset extrude factor override to 100% 
    G92 E0                         ; zero the extruder
    G1 E-30.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X125 Y250 F3600            ; park nozzle at rear
    STATUS_OFF
    #BED_MESH_CLEAR

## MailsailOS Macros  
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(230) %}      #edit to your park position
    {% set y = params.Y|default(230) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    STATUS_BUSY
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    status_printing
    RESUME_BASE {get_params}
    
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    M220 S100                      ; reset print speed override to 100% 
    M221 S100               ; reset extrude factor override to 100% 
    TURN_OFF_HEATERS
    STATUS_OFF
    CANCEL_PRINT_BASE

[gcode_macro PRIME_EXTRUDER]
gcode:
    M117 Priming
    G92 E0
    G1 X2.1 Y20 Z2.0 F2000          ; Set Prime Line start point
    G1 X2.1 Y90 Z0.28 F2000.0 E5   ; Draw the first line
    G1 X2.4 Y90 Z0.28 F2000.0       ; Move to the side a little
    G1 X2.4 Y20.0 Z0.28 F2000.0 E10 ; Draw the second line
    G92 E0 
    G1 F2400 E-0.7 # Small retract to remove pressure
    G1 Z2.0 F3000 ;Move Z Axis up
    M117 Optimus Primed, lets go!

[gcode_macro PARKCENTER]
gcode:
    {% set Z = params.Z|default(30)|float %}
    SAVE_GCODE_STATE NAME=PARKCENTER_state
    _CG28                          ; Home if not already homed
    G90                            ; absolute positioning
    G0 X150 Y150 Z{Z} F12000       ; move to center
    STATUS_READY
    RESTORE_GCODE_STATE NAME=PARKCENTER_state

# Compare the GET_POSITION output before and after, see if you skipped steps. IIRC you want the "mcu" line to show within 16 before and after (a full step)
[gcode_macro SPEED_TEST]
gcode:
    #Parameters
    {% set i = params.I|default(1)|int %}
    {% set da = params.DIAGONAL_ACCEL|default(34000)|int %}
    {% set la = params.LINEAR_ACCEL|default(68000)|int %}

    {% set boarder_delta = 30 %}

    {% set min_x = 0 + boarder_delta %}
    {% set min_y = 0 + boarder_delta %}
    {% set max_x = 300 - boarder_delta %}
    {% set max_y = 300 - boarder_delta %}

    SAVE_GCODE_STATE NAME=SPEED_TEST
    G28 X Y
    GET_POSITION
    G90
    {% for iteration in range(i|int) %}
        G1 X{min_x} Y{min_y} F{da}
        G1 X{max_x} Y{max_y} F{da}
        G1 X{min_x} Y{min_y} F{da}
        G1 X{max_x} Y{max_y} F{da}

        G1 X{min_x} Y{max_y} F{la}

        G1 X{max_x} Y{min_y} F{da}
        G1 X{min_x} Y{max_y} F{da}
        G1 X{max_x} Y{min_y} F{da}
        G1 X{min_x} Y{max_y} F{da}

        G1 X{min_x} Y{min_y} F{la}
        G1 X{max_x} Y{min_y} F{la}
        G1 X{max_x} Y{max_y} F{la}
        G1 X{min_x} Y{max_y} F{la}
        G1 X{min_x} Y{min_y} F{la}
    {% endfor %}
    G28 X Y
    GET_POSITION
    RESTORE_GCODE_STATE NAME=SPEED_TEST

[gcode_macro Filament_Unload] 
gcode:
    STATUS_BUSY
    G91
    G1 E-100 F1800
    G90

[gcode_macro Filament_Load] 
gcode:
    STATUS_BUSY
    G91
    G1 E150 F500
    G90

[gcode_macro M600]
gcode:
    {% set X = params.X|default(240)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E2 F1000 #extrude a little to form a point
    G1 E-30 F1000 #retract out of the hot end
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro Disable_Steppers] 
gcode:
    M84

# run repeated Probe Accuracy tests, docking between each to see if Z is drifting
[gcode_macro Probe_Accuracy_Repeats]
gcode:
    #Parameters
    {% set i = params.I|default(1)|int %}
    SAVE_GCODE_STATE NAME=REPEATS_TEST
    {% for iteration in range(i|int) %}
        probe_accuracy
    {% endfor %}
    RESTORE_GCODE_STATE NAME=REPEATS_TEST

    # run repeated Probe Accuracy tests, docking between each to see if Z is drifting
[gcode_macro Probe_Accuracy_Corners]
gcode:
    #Parameters
    {% set i = params.I|default(1)|int %}
    {% set d = params.d|default('false') %}
    SAVE_GCODE_STATE NAME=REPEATS_TEST
    {% for iteration in range(i|int) %}
        G0 X30 Y12 F12000
        probe_accuracy dock={d}
        G0 X30 Y250 F12000
        probe_accuracy dock={d}
        G0 X270 Y250 F12000
        probe_accuracy dock={d}
        G0 X270 Y12 F12000
        probe_accuracy dock={d}
        G0 X150 Y150 F12000
        probe_accuracy dock={d}
    {% endfor %}
    Detach_Probe
    RESTORE_GCODE_STATE NAME=REPEATS_TEST

[gcode_macro PRINT_START_TPU]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(100)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(220)|float %}
    {% set z_adjust = params.Z_ADJUST|default(0.0)|float %}
    {% set retract = 0 %}
    M107
    STATUS_HEATING
    M140 S{BED_TEMP}                         ; set bed final temp
    M190 S{BED_TEMP}                         ; wait for bed final temp
    Attach_Probe_Lock
      {% if "z" not in printer.toolhead.homed_axes %}
          G32                         ;Only G28 Home if needed
          BED_MESH_CALIBRATE
      {% else %}
          {% if printer.bed_mesh.profile_name == '' %}
              G32
              BED_MESH_CALIBRATE
          {% else %}
              {% if not printer.quad_gantry_level.applied %}
                M117 QGL
                QUAD_GANTRY_LEVEL
                G28 X Y	Z		      ; Re-home
              {% endif %}
              G91
              G1 Z10 Y-10 X-10 F4000
              G90
          {% endif %}
      {% endif %}
    Dock_Probe_Unlock
    G1 X135 Y307 Z10 F9000
    M117 Heating..
    STATUS_HEATING
    M104 S{EXTRUDER_TEMP}
    M109 S{EXTRUDER_TEMP}             ; Set and wait for nozzle to reach temperature
    SET_GCODE_VARIABLE MACRO=clean_nozzle VARIABLE=enable_purge VALUE="True"
    SET_GCODE_VARIABLE MACRO=clean_nozzle VARIABLE=wipe_qty VALUE="4"
    SET_GCODE_VARIABLE MACRO=clean_nozzle VARIABLE=purge_ret VALUE="0"    
    clean_nozzle                      ; clean nozzle
    CALIBRATE_Z
    #BED_MESH_PROFILE LOAD=default   ; load mesh if needed
    # Adjust the G-Code Z offset with the Z_ADJUST parameter if needed
    # SET_GCODE_OFFSET Z_ADJUST={z_adjust} MOVE=1
    G92 E0                         ; zero the extruder
    STATUS_READY
    M117 Intro Line..
    _PURGE_LINE
    M117 Printing...
    status_printing

[gcode_macro PRINT_END_TPU]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    M220 S100                      ; reset print speed override to 100% 
    M221 S100               ; reset extrude factor override to 100% 
    G92 E0                         ; zero the extruder
    G1 E-1.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X125 Y250 F3600            ; park nozzle at rear
    STATUS_OFF
    #BED_MESH_CLEAR